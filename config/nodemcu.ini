; NodeMCU DEVKIT 1.0 (ESP8266)
[env:nodemcu]

; https://docs.platformio.org/en/latest/projectconf/section_env_platform.html#platform
; https://docs.platformio.org/en/latest/platforms/index.html#platforms
; https://docs.platformio.org/en/latest/platforms/espressif8266.html
platform = espressif8266

; https://docs.platformio.org/en/latest/projectconf/section_env_platform.html#board
; https://docs.platformio.org/en/latest/boards/index.html#boards
; https://docs.platformio.org/en/latest/boards/espressif8266/nodemcuv2.html
board = nodemcuv2

; https://docs.platformio.org/en/latest/platforms/espressif8266.html#selecting-appropriate-filesystem
board_build.filesystem = littlefs

; https://docs.platformio.org/en/latest/projectconf/section_env_platform.html#framework
; https://docs.platformio.org/en/latest/frameworks/index.html#frameworks
; https://docs.platformio.org/en/latest/frameworks/arduino.html
framework = arduino

; https://docs.platformio.org/en/latest/platforms/espressif8266.html#upload-speed
upload_speed = 921600

monitor_speed = 115200

; order matters!
;     for example colorize must be AFTER esp8266_exception_decoder
;     otherwise decoder just doesn't decode
monitor_filters =
    ; todo: `debug` adds a lot of shit but nothing useful to me?
;    debug
    ; `esp8266_exception_decoder` decodes stacktrace on crash exception
    esp8266_exception_decoder
    time
    ; todo: colorize is unnecessary? colors work anyway, at least in Mac terminal
    ; todo: although this is interesting:
    ;       `e[1;31mHello from `DnWiFiDoorLock`!e[1;37m`
    ;       by default it is color red -> works nice
    ;       but with colorize the last "m" is shown as letter, not ending sequence o.O
;    colorize

; the default is `release`
; uncomment `debug` for build without optimizations and full symbolic debug info
; https://docs.platformio.org/en/latest/projectconf/section_env_build.html#build-type
; https://docs.platformio.org/en/latest/projectconf/build_configurations.html#build-configurations
;build_type = debug

; https://docs.platformio.org/en/latest/projectconf/sections/env/options/build/build_unflags.html
build_unflags =
    ; a newer standard is appended in the `common` `build_flags`
    ;
    ; todo: ask if/when/how will the GCC itself be upgraded to a newer version
    ;       https://community.platformio.org/t/std-gnu-20-is-shown-as-201709-nodemcuarduino/32514
    -std=gnu++17

; https://docs.platformio.org/en/latest/projectconf/sections/env/options/build/build_flags.html
build_flags =
    ${common.build_flags}

    # `-D`: global macro definitions
    '-D APP_NAME="Furnace"'

    '-D SERIAL_BITS_PER_SECOND=115200'

    ; brown GND
    ; red 3v3 (or better: Vin â€“ it is showing 4.65V while powered by usb)
    ; orange D2 [pin4 at NodeMcu]
    '-D SERVO_PIN=4'

    '-D WIFI_SSID="${secret.wifi_ssid}"'
    '-D WIFI_PASSWORD="${secret.wifi_password}"'

    '-D WEB_SERVER_PORT=${secret.web_server_port}'
    '-D WEB_SERVER_HOSTNAME="${secret.web_server_hostname}"'

    '-D OTA_UPLOAD_PORT=${secret.ota_upload_port}'
    '-D OTA_UPLOAD_HOSTNAME="${secret.ota_upload_hostname}"'
    !echo '-D OTA_UPLOAD_PASSWORD_MD5=\\"'$(md5 -q -s ${secret.ota_upload_password})'\\"'

    '-D FURNACE_HEATER_BUTTON_PRESSING_ANGLE=0'
    '-D FURNACE_HEATER_BUTTON_NOT_PRESSING_ANGLE=90'
    '-D FURNACE_HEATER_BUTTON_PRESSING_MILLISECONDS=2000'

    ; Latest commit hash; `%h` formats it to the short commit hash version:
    ; https://stackoverflow.com/a/5694454/666907
    ; https://git-scm.com/docs/pretty-formats/2.39.0
    !echo '-D BUILD_GIT_COMMIT_HASH=\\"'$(git log -1 --format=%%h)'\\"'

; https://docs.platformio.org/en/latest/projectconf/sections/env/options/build/build_src_flags.html
; https://docs.platformio.org/en/latest/projectconf/sections/env/options/build/build_flags.html
build_src_flags =
    ${common.build_src_flags}

    ; Give an error whenever the base standard (see -Wpedantic) requires a diagnostic
    ; https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html
    -Wpedantic

; https://docs.platformio.org/en/latest/projectconf/section_env_library.html#lib-deps
lib_deps =
    ${common.lib_deps}

    ; todo: remove this lib requirement entirely after they fix the warning:
    ;       https://github.com/me-no-dev/ESPAsyncTCP/pull/187
    https://github.com/MacDada/ESPAsyncTCP.git#wpedantic_warning_fix

    ; fetching the repo "manually" to have the latest changes (fixed warnings, etc)
    ; todo: get back to "normal" versioning when they publish a new revision [?]
    ;       https://community.platformio.org/t/library-has-changes-not-pushed-to-registry-espasyncwebserver/33393
    https://github.com/me-no-dev/ESPAsyncWebServer.git
;    me-no-dev/ESP Async WebServer @ ^1.2.3

    ayushsharma82/WebSerial @ ^1.3.0
    https://github.com/TartanLlama/expected.git

; https://docs.platformio.org/en/stable/projectconf/section_env_library.html#lib-extra-dirs
lib_extra_dirs =
    arduino

; https://docs.platformio.org/en/latest/projectconf/section_env_build.html#build-src-filter
build_src_filter = "+<arduino.cpp>"

; https://docs.platformio.org/en/latest/projectconf/section_env_test.html#test-filter
; todo: is it even possible to configure tests on NodeMcu?
test_filter = embedded/*

; https://docs.platformio.org/en/latest/projectconf/sections/env/options/advanced/extra_scripts.html
; https://docs.platformio.org/en/latest/scripting/actions.html
extra_scripts =
    post:scripts/pio_post_extra_script.py

; https://docs.platformio.org/en/latest/scripting/examples/platformio_ini_custom_options.html
custom_system_packages =
    ; Silencing warnings from the (framework) dependencies.
    ;
    ; Without it, there is a lot of issues, like:
    ;   .platformio/packages/framework-arduinoespressif8266/libraries/ESP8266WiFi/src/
    ;   WiFiServerSecureBearSSL.h:88:2:
    ;   warning: extra ';' [-Wpedantic]
    ;      88 | };
    ;         |  ^
    ; todo: report/fix the issues in the framework
    framework-arduinoespressif8266
