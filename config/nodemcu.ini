; NodeMCU DEVKIT 1.0 (ESP8266)
[env:nodemcu]

; https://docs.platformio.org/en/latest/projectconf/section_env_platform.html#platform
; https://docs.platformio.org/en/latest/platforms/index.html#platforms
; https://docs.platformio.org/en/latest/platforms/espressif8266.html
platform = espressif8266

; https://docs.platformio.org/en/latest/projectconf/section_env_platform.html#board
; https://docs.platformio.org/en/latest/boards/index.html#boards
; https://docs.platformio.org/en/latest/boards/espressif8266/nodemcuv2.html
board = nodemcuv2

; https://docs.platformio.org/en/latest/platforms/espressif8266.html#selecting-appropriate-filesystem
board_build.filesystem = littlefs

; https://docs.platformio.org/en/latest/projectconf/section_env_platform.html#framework
; https://docs.platformio.org/en/latest/frameworks/index.html#frameworks
; https://docs.platformio.org/en/latest/frameworks/arduino.html
framework = arduino

; https://docs.platformio.org/en/latest/platforms/espressif8266.html#upload-speed
upload_speed = 921600

monitor_speed = 115200

; order matters!
;     for example colorize must be AFTER esp8266_exception_decoder
;     otherwise decoder just doesn't decode
monitor_filters =
    ; todo: `debug` adds a lot of shit but nothing useful to me?
;    debug
    ; `esp8266_exception_decoder` decodes stacktrace on crash exception
    esp8266_exception_decoder
    time
    ; todo: colorize is unnecessary? colors work anyway, at least in Mac terminal
    ; todo: although this is interesting:
    ;       `e[1;31mHello from `DnWiFiDoorLock`!e[1;37m`
    ;       by default it is color red -> works nice
    ;       but with colorize the last "m" is shown as letter, not ending sequence o.O
;    colorize

; the default is `release`
; uncomment `debug` for build without optimizations and full symbolic debug info
; https://docs.platformio.org/en/latest/projectconf/section_env_build.html#build-type
; https://docs.platformio.org/en/latest/projectconf/build_configurations.html#build-configurations
;build_type = debug

; https://docs.platformio.org/en/latest/projectconf/sections/env/options/build/build_unflags.html
build_unflags =
    ; a newer standard is appended in the `common` `build_flags`
    ;
    ; todo: ask if/when/how will the GCC itself be upgraded to a newer version
    ;       https://community.platformio.org/t/std-gnu-20-is-shown-as-201709-nodemcuarduino/32514
    -std=gnu++17

; https://docs.platformio.org/en/latest/projectconf/sections/env/options/build/build_flags.html
build_flags =
    ${common.code_quality_build_flags}
    ${common.project_global_defines_build_flags}

; https://docs.platformio.org/en/latest/projectconf/section_env_library.html#lib-deps
lib_deps =
    ${common.lib_deps}

    ; fetching the repo "manually" to have the latest changes (fixed warnings, etc)
    ; todo: get back to "normal" versioning when they publish a new revision [?]
    ;       https://community.platformio.org/t/library-has-changes-not-pushed-to-registry-espasyncwebserver/33393
    https://github.com/me-no-dev/ESPAsyncWebServer.git
;    me-no-dev/ESP Async WebServer @ ^1.2.3

    ayushsharma82/WebSerial @ ^1.3.0
    https://github.com/TartanLlama/expected.git

; https://docs.platformio.org/en/stable/projectconf/section_env_library.html#lib-extra-dirs
lib_extra_dirs =
    arduino

; https://docs.platformio.org/en/latest/projectconf/section_env_build.html#build-src-filter
build_src_filter = "+<arduino.cpp>"

; https://docs.platformio.org/en/latest/projectconf/section_env_test.html#test-filter
; todo: is it even possible to configure tests on NodeMcu?
test_filter = embedded/*

; https://docs.platformio.org/en/latest/projectconf/sections/env/options/advanced/extra_scripts.html
; https://docs.platformio.org/en/latest/scripting/actions.html
extra_scripts = post:scripts/pio_post_extra_script.py
