; Same as native, with extra Arduino framework mocking.
[env:native_arduino]

; https://docs.platformio.org/en/latest/projectconf/section_env_advanced.html#extends
extends = env:native

; https://docs.platformio.org/en/latest/projectconf/section_env_library.html#lib-deps
lib_deps =
    ${env:native.lib_deps}
    # todo: upgrade when fixed warnings:
    #       https://github.com/FabioBatSilva/ArduinoFake/issues/48
    fabiobatsilva/ArduinoFake@0.3.1

; https://docs.platformio.org/en/stable/projectconf/section_env_library.html#lib-extra-dirs
lib_extra_dirs =
    arduino
    native_arduino

; https://docs.platformio.org/en/latest/projectconf/sections/env/options/build/build_src_flags.html
; https://docs.platformio.org/en/latest/projectconf/sections/env/options/build/build_flags.html
build_src_flags =
    ${common.build_src_flags}

    ; Issue all the warnings demanded by strict ISO C and ISO C++
    ; https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html
    ;
    ; todo: enable when issues disappear
    ;       * There is quite a few in `ArduinoFake` lib.
    ;       * `ArduinoFake` is a library, not package -> so `custom_system_packages` does not help.
    ;       * PIO apparently applies these flags to dependencies as wellâ€¦ :/
    ;         https://github.com/platformio/platformio-core/issues/4667
    ;       * Instead of enabling exactly here, I could just reuse `native` config, ofc.
    ;-Wpedantic

; https://docs.platformio.org/en/latest/projectconf/section_env_test.html#test-filter
test_filter =
    ${env:native.test_filter}
    native_arduino/*
